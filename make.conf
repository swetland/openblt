# Target host for "make run"
#
#IP = 10.0.0.5
#IP = 128.174.252.78
#IP = 10.113.194.70
IP = 10.0.0.43

# List of .ini files to pass to bootmaker
#
INIFILES := boot/openblt.ini boot/misc.ini boot/window.ini boot/fs.ini 
# LOCALINIFILES := 

##############################################################################
#                                KERNEL OPTIONS
##############################################################################
# Debug options for monochrome display or serial io
#
#VIDMODE = -DMONO
#SERIAL += -DSERIAL
#SERIAL += -DSERIAL_DEBUG
#SERIAL += -DDPRINTF
#SERIAL += -DPORT_E9

# Uncomment at most one machine type.  The default will be equivalent to I386.
# A sensible choice will get you better performance.  Kernels are not
# guaranteed to run on a lower processor than that which they were built for.
# Your choice does not affect your ability to do SMP.
#
CPU = -DI386
#CPU = -DI486
#CPU = -DI586
#CPU = -DI686

# Uncomment this to build an SMP-capable kernel.  SMP kernels will still run
# on UP machines.
#
#SMP = -D__SMP__

##############################################################################
#                              END KERNEL OPTIONS
##############################################################################

# Cross-compilation prefix / postfix stuff
#
#PREFIX = i586-beoself-
#POSTFIX = 386

# Linker arg stuff
#
ENTRY_KERNEL = 80000074
ENTRY_USER = 01074    
ENTRY_BOOTSTRAP = 101074
ENTRY_ROM = 90074

CC = $(PREFIX)gcc$(POSTFIX)
C++ = $(PREFIX)g++$(POSTFIX)
LD = $(PREFIX)ld$(POSTFIX)
NM = $(PREFIX)nm$(POSTFIX)
ST = $(PREFIX)strip$(POSTFIX)
AR = $(PREFIX)ar$(POSTFIX)

OPTIMIZER := -O2
WARNINGS := -Wall

# Optionally strip all binaries (save some space)
# .debug versions of binaries will be also made in this case
#
STRIP := false

define SRCS_TO_OBJS
    $(addsuffix .o, $(foreach file, $(SRCS), $(basename $(notdir $(file)))))
endef


# Adjust our paths based on the BLTHOME variable
# 
#
ENTRY		:= $(ENTRY_USER)
INCLUDES	:= -I$(BLTHOME)include
LIBBASE		:= -L$(BLTHOME)lib/obj
CRT0		:= $(BLTHOME)lib/crt0.o


CFLAGS := -nostdinc -fno-builtin $(WARNINGS) -Wno-multichar $(OPTIMIZER) $(INCLUDES) $(VIDMODE) $(CPU)

CXXFLAGS := -nostdinc -fno-rtti -fno-exceptions -fno-builtin $(WARNINGS) -Wno-multichar $(OPTIMIZER) $(INCLUDES) $(VIDMODE) $(CPU)

# Prevent rule confusion...
#

default: all

# Used to insure BLTHOME is actually set
#
check_path:
ifeq ($(BLTHOME),)
	@echo error: BLTHOME is not set
	@/bin/false
endif

